// Naƒç√≠t√°m Express ‚Äì backendov√Ω framework, kter√Ω mi pom√°h√° vytv√°≈ôet API (routy, requesty, odpovƒõdi).
const express = require("express");

// Vytv√°≈ô√≠m novou instanci routeru ‚Äì tady definuju v≈°echny cesty (endpoints) pro MealAssignment.
const router = express.Router();

// Naƒç√≠t√°m controller pro MealAssignment ‚Äì obsahuje funkce, kter√© se volaj√≠, kdy≈æ u≈æivatel po≈°le po≈æadavek na API.
const mealAssignmentController = require("../controllers/mealAssignmentController");

// üõ†Ô∏è Definice cest:
// Kdy≈æ p≈ôijde po≈æadavek PUT (aktualizace) na adresu "/updateDelete", zavol√° se funkce updateOrDeleteMeal z controlleru.
router.put("/updateDelete", mealAssignmentController.updateOrDeleteMeal);

// Kdy≈æ p≈ôijde po≈æadavek DELETE (smaz√°n√≠) na stejnou adresu "/updateDelete", zavol√° se √∫plnƒõ ta stejn√° funkce.
// Je to proto, ≈æe v controlleru je logika, kter√° se rozhoduje podle "action" (jestli m√° aktualizovat nebo mazat).
router.delete("/updateDelete", mealAssignmentController.updateOrDeleteMeal);

// Exportuju tento router, aby se dal pou≈æ√≠t v hlavn√≠m souboru aplikace (app.js nebo server.js).
module.exports = router;
